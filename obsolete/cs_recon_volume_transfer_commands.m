function shipper_cmds=cs_recon_volume_transfer_commands()
shipper_cmds=cell(0);
return;
error('incomplete');
% this was ripped out of volume_manager but hasnt been updated, 
% its very hate-able so it's inherrently obsolete
        
%% craft archive tag commands for later.
warning('archive tag handling is sloppy');
write_archive_tag_success_cmd = ...
    sprintf(['if [[ -f %s ]]; then\n'...
    '\t  rm %s;\n'...
    'fi;\n'...
    'if [[ ${archive_tag_success} -eq 1 ]];\n'...
    'then\n'...
    '\t  echo "Archive tag transfer successful!"\n'...
    '\t  touch %s;\n'...
    'else\n'...
    '\t  touch %s; \n'...
    'fi'],flag_at_fail,flag_at_fail,flag_at_success,flag_at_fail);
handle_archive_tag_cmd = ...
    sprintf(['if [[ ! -f %s ]]; then\n'...
    '\t  archive_tag_success=0;\n'...
    '\t  if [[ -f %s ]] && [[ -f %s ]]; then\n'...
    '\t  \t  scp -p %s %s@%s:/Volumes/%sspace/Archive_Tags/READY_%s && archive_tag_success=1;\n'...
    '\t  \t  %s;\n'...
    '\t  fi;\n'...
    'fi'],flag_at_success, flag_success, flag_hf_success, ...
    local_archive_tag,sys_user(),remote_workstation.host_name,remote_workstation.name,volume_runno,write_archive_tag_success_cmd);
if ~exist('setup_var','var')
    setup_var = matfile(setup_variables,'Writable',true);
end
setup_var.handle_archive_tag_cmd=handle_archive_tag_cmd;


%% Send to workstation and write completion flag.
%rm_previous_flag = sprintf('if [[ -f %s ]]; then rm %s; fi',fail_flag,fail_flag);
t_images_dir = images_dir;
mkdir_cmd = sprintf('ssh %s ''mkdir -p /Volumes/%sspace/%s/%simages/''',...
    remote_workstation.host_name,remote_workstation.name,volume_runno,volume_runno);
scp_cmd = sprintf(['echo "Attempting to transfer data to %s.";' ...
    'scp -pr %s %s@%s:/Volumes/%sspace/%s/ && success=1'], ...
    remote_workstation.name,t_images_dir,sys_user(),remote_workstation.host_name,remote_workstation.name,volume_runno);
write_success_cmd = sprintf('if [[ $success -eq 1 ]];\nthen\n\techo "Transfer successful!"\n\ttouch %s;\nelse\n\ttouch %s; \nfi',flag_success,flag_fail);
%{
                local_size_cmd = sprintf('gimmespaceK=`du -cks %s | tail -n 1 | xargs |cut -d '' '' -f1`',images_dir);
                remote_size_cmd = sprintf('freespaceK=`ssh omega@%s.dhe.duke.edu ''df -k /Volumes/%sspace ''| tail -1 | cut -d '' '' -f5`',remote_workstation.name,remote_workstation.name);
                eval_cmd = sprintf(['success=0;\nif [[ $freespaceK -lt $gimmespaceK ]]; then\n\techo "ERROR: not enough space to transfer %s to %s; $gimmespaceK K needed, but only $freespaceK K available."; '...
               'else %s; fi; %s'],  images_dir,remote_workstation.name, scp_cmd,write_success_cmd);
%}
n_raw_images = recon_mat.dim_z;
shipper_cmds{1}=sprintf('success=0;\nc_raw_images=$(ls %s | grep raw | wc -l | xargs); if [[ "${c_raw_images}"  -lt "%i" ]]; then\n\techo "Not all %i raw images have been written (${c_raw_images} total); no images will be sent to remote machine.";\nelse\nif [[ -f %s ]]; then\n\trm %s;\nfi',images_dir,n_raw_images,n_raw_images,flag_fail,flag_fail);
shipper_cmds{2}=sprintf('gimmespaceK=`du -cks %s | tail -n 1 | xargs |cut -d '' '' -f1`',images_dir);
shipper_cmds{3}=sprintf('freespaceK=`ssh %s ''df -k /Volumes/%sspace ''| tail -1 | xargs | cut -d '' '' -f4`', remote_workstation.host_name,  remote_workstation.name);
shipper_cmds{4}=sprintf('if [[ $freespaceK -lt $gimmespaceK ]];');
shipper_cmds{5}=sprintf('then\n\techo "ERROR: not enough space to transfer %s to %s; $gimmespaceK K needed, but only $freespaceK K available."',images_dir,remote_workstation.name);
shipper_cmds{6}=sprintf('else\n\t%s;\n\t%s;\nfi',mkdir_cmd,scp_cmd);
shipper_cmds{7}=sprintf('fi\n%s',write_success_cmd);
shipper_cmds{8}=sprintf('%s',handle_archive_tag_cmd);
